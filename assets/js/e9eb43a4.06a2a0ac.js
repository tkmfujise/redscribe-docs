"use strict";(globalThis.webpackChunkredscribe_docs=globalThis.webpackChunkredscribe_docs||[]).push([[1112],{2555:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"using_repl","title":"Using REPL","description":"Open the REPL, type 1 + 1 and press Ctrl-Enter.","source":"@site/docs/03.using_repl.md","sourceDirName":".","slug":"/using_repl","permalink":"/redscribe-docs/docs/using_repl","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"Using REPL"},"sidebar":"tutorialSidebar","previous":{"title":"Hello Ruby!","permalink":"/redscribe-docs/docs/hello"},"next":{"title":"Example 1: Simple Live Coding App","permalink":"/redscribe-docs/docs/example1_live_coding"}}');var l=s(4848),r=s(8453),t=s(4028);const d={sidebar_label:"Using REPL"},a="Using REPL",c={},h=[{value:"Emit signals",id:"emit-signals",level:2},{value:"Define methods",id:"define-methods",level:2},{value:"Use require",id:"use-require",level:2},{value:"Reload and initialze the REPL",id:"reload-and-initialze-the-repl",level:2}];function o(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"using-repl",children:"Using REPL"})}),"\n",(0,l.jsxs)(n.p,{children:["Open the REPL, type ",(0,l.jsx)(n.code,{children:"1 + 1"})," and press ",(0,l.jsx)(n.code,{children:"Ctrl-Enter"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"The result will be displayed."}),"\n",(0,l.jsx)(t.A,{children:(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"REPL started",src:s(3326).A+"",width:"1918",height:"1024"})})}),"\n",(0,l.jsx)(n.p,{children:"The REPL supports several shortcuts."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Ctrl-u"})," clears the input field"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Ctrl-k"})," deletes text after the cursor in the input field"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Ctrl-l"})," clears the output field"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Up arrow (\u2191)"}),", ",(0,l.jsx)(n.code,{children:"Down arrow (\u2193)"})," navigates through input field history"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Ctrl-["})," switches to the Editor tab"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Ctrl-]"})," switches back to the REPL tab"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The REPL also supports multi-line input, with ",(0,l.jsx)(n.code,{children:"Enter"})," as a newline."]}),"\n",(0,l.jsxs)(n.p,{children:["Type the following and press ",(0,l.jsx)(n.code,{children:"Ctrl-Enter"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"class Foo\n  def bar\n    'FooBar'\n  end\nend\n\nFoo.new.bar\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="Output"',children:'=> "FooBar"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"emit-signals",children:"Emit signals"}),"\n",(0,l.jsx)(n.p,{children:"Try each of the following:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"foo 'bar'\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"Godot.emit_signal :foo, 'bar'\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="Output"',children:'[ foo ] method_missing: ["bar"]\n=> <null>\n\n[ foo ] signal emitted: "bar"\n=> true\n'})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"=>"})," represents the return value of the method.\nIf any signal is emitted, it will be displayed in the output."]}),"\n",(0,l.jsx)(t.A,{children:(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Emitting signals",src:s(4438).A+"",width:"288",height:"118"})})}),"\n",(0,l.jsxs)(n.p,{children:["Red text is displayed when a ",(0,l.jsx)(n.strong,{children:"method_missing"})," channel signal is emitted,\nwhile blue text appears when a ",(0,l.jsx)(n.strong,{children:"channel"})," signal is emitted."]}),"\n",(0,l.jsx)(n.h2,{id:"define-methods",children:"Define methods"}),"\n",(0,l.jsx)(n.p,{children:"Try the following:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"@count = 0\ndef up\n  @count += 1\nend\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Then, try ",(0,l.jsx)(n.code,{children:"up"})," a few times."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="Output"',children:"up\n=> 1\nup\n=> 2\nup\n=> 3\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"100.times { up }\n@count\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="Output"',children:"100.times { up }\n=> 100\n@count\n=> 104\n"})}),"\n",(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsxs)(n.p,{children:["Local variables are no longer available after execution.\nSo use instance variables like ",(0,l.jsx)(n.code,{children:"@count = 0"})," instead of ",(0,l.jsx)(n.code,{children:"count = 0"}),"."]})}),"\n",(0,l.jsx)(n.h2,{id:"use-require",children:"Use require"}),"\n",(0,l.jsxs)(n.p,{children:["mruby doesn't include ",(0,l.jsx)(n.code,{children:"require"})," by default, but ReDScribe provides it as a helper method that loads Ruby files from the root of your Godot project."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"require 'addons/redscribe/mrblib/math'\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Run this, if the file loads successfully, it will return ",(0,l.jsx)(n.code,{children:"true"}),".\nThe file is only loaded once\u2014on subsequent calls, it will return ",(0,l.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="Output"',children:"=> true\n"})}),"\n",(0,l.jsxs)(n.p,{children:["After executing ",(0,l.jsx)(n.code,{children:"require"}),", try calling:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"sin(1)\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="Output"',children:"=> 0.8414709848079\n"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"addons/redscribe/mrblib/math.rb"})," calls ",(0,l.jsx)(n.code,{children:"extend Math"}),", making the ",(0,l.jsx)(n.code,{children:"sin"})," method available."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",metastring:'title="addons/redscribe/mrblib/math.rb"',children:"extend Math\ninclude Math\n\ndef \u03c0\n  PI\nend\n\ndef \u221a(x)\n  sqrt(x)\nend\n\n# ...\n"})}),"\n",(0,l.jsx)(n.h2,{id:"reload-and-initialze-the-repl",children:"Reload and initialze the REPL"}),"\n",(0,l.jsx)(n.p,{children:"To initialize the REPL, run:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"reload!\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Once initalized, if you call the ",(0,l.jsx)(n.code,{children:"up"})," or ",(0,l.jsx)(n.code,{children:"sin"})," method again, you'll get ",(0,l.jsx)(n.strong,{children:"method_missing"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"up\nsin(1)\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-txt",metastring:'title="Output"',children:"[ up ] method_missing: []\n[ sin ] method_missing: [1]\n=> <null>\n"})}),"\n",(0,l.jsx)(n.p,{children:"That's the basic usage of the REPL."}),"\n",(0,l.jsx)(n.p,{children:"The REPL can be very helpful\u2014feel free to use it whenever you like!"})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},3326:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/03.repl-started-2215387fa827e072f28c1f0103fc7ee1.png"},4438:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/03.repl-signals-c82a0adbeb4a2c7062a6a9bd9265e928.png"}}]);