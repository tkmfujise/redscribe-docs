"use strict";(globalThis.webpackChunkredscribe_docs=globalThis.webpackChunkredscribe_docs||[]).push([[8904],{7765:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"using_mrblib","title":"Using addons/redscribe/mrblib","description":"In the previous chapter, we built a DSL from scratch.","source":"@site/docs/09.using_mrblib.md","sourceDirName":".","slug":"/using_mrblib","permalink":"/redscribe-docs/docs/using_mrblib","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_label":"Using addons/redscribe/mrblib"},"sidebar":"tutorialSidebar","previous":{"title":"Example 2: Dialogue Controller","permalink":"/redscribe-docs/docs/example2_dialogue"},"next":{"title":"Example 3: Generating Resources","permalink":"/redscribe-docs/docs/example3_generating_resources"}}');var i=s(4848),c=s(8453);const o={sidebar_label:"Using addons/redscribe/mrblib"},t="Using addons/redscribe/mrblib",d={},l=[{value:"coroutine",id:"coroutine",level:2},{value:"actor",id:"actor",level:2},{value:"resource",id:"resource",level:2},{value:"Others",id:"others",level:2}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"using-addonsredscribemrblib",children:"Using addons/redscribe/mrblib"})}),"\n",(0,i.jsxs)(r.p,{children:["In the previous chapter, we built a DSL from scratch.\nHowever you don't always need to start from zero. ReDScribe provides a set of general-purpose components in advance, located in the ",(0,i.jsx)(r.code,{children:"addons/redscribe/mrblib"})," folder."]}),"\n",(0,i.jsx)(r.p,{children:"Here are some reprentative examples."}),"\n",(0,i.jsx)(r.h2,{id:"coroutine",children:"coroutine"}),"\n",(0,i.jsxs)(r.p,{children:["This DSL provides a simple interface for working with ",(0,i.jsx)(r.code,{children:"Fiber"}),"."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"___?"})," is a shorthand alias for ",(0,i.jsx)(r.code,{children:"Fiber.yield"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"___"})," retrives the value passed when the ",(0,i.jsx)(r.code,{children:"Fiber"})," is resumed."]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"require 'addons/redscribe/mrblib/coroutine'\n\ncoroutine 'Foo' do\n  while ___?\n    emit! :given, ___\n  end\n  emit! :finished, true\nend\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["To start a ",(0,i.jsx)(r.code,{children:"Fiber"}),", call the ",(0,i.jsx)(r.code,{children:"start"})," method."]}),"\n",(0,i.jsxs)(r.li,{children:["To resume a ",(0,i.jsx)(r.code,{children:"Fiber"}),", use the ",(0,i.jsx)(r.code,{children:"resume"})," method."]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"start :all\n\nresume 'Foo'\nresume 'Foo', 'bar'\nresume 'Foo', false\n"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-txt",metastring:'title="Output"',children:'=> true\n\n[ given ] signal emitted: true\n[ given ] signal emitted: "bar"\n[ finished ] signal emitted: true\n'})}),"\n",(0,i.jsxs)(r.p,{children:["For implementation details, see ",(0,i.jsx)(r.a,{href:"https://github.com/tkmfujise/ReDScribe/blob/main/demo/addons/redscribe/mrblib/coroutine.rb",children:"addons/redscribe/mrblib/coroutine.rb"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["By using ",(0,i.jsx)(r.strong,{children:"coroutine.rb"}),", you can build interactive structures such as diaglogue systems."]}),"\n",(0,i.jsxs)(r.p,{children:["See: ",(0,i.jsx)(r.a,{href:"https://github.com/tkmfujise/ReDScribe/blob/main/doc/examples/4_coroutine.md",children:"https://github.com/tkmfujise/ReDScribe/blob/main/doc/examples/4_coroutine.md"})]}),"\n",(0,i.jsx)(r.h2,{id:"actor",children:"actor"}),"\n",(0,i.jsx)(r.p,{children:"This DSL allows you to define actors."}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Use ",(0,i.jsx)(r.code,{children:"--\x3e {}"})," to describe the default behavior the actor performs when ticked."]}),"\n",(0,i.jsxs)(r.li,{children:["Use ",(0,i.jsx)(r.code,{children:":key --\x3e {}"})," to define how the actor reacts when receiving a specific message (",(0,i.jsx)(r.code,{children:":key"}),")."]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"require 'addons/redscribe/mrblib/actor'\n\nactor 'Counter' do\n  @count = 0\n  --\x3e { @count += 1 }\n  :reset --\x3e { @count = 0 }\nend\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["To invoke an actor's behavior, call the ",(0,i.jsx)(r.code,{children:"tick"})," method."]}),"\n",(0,i.jsxs)(r.li,{children:["To send a message to an actor, use the ",(0,i.jsx)(r.code,{children:"tell"})," method."]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"tick\ntick\ntick\n\ntell 'Counter', :reset\ntick\n"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-txt",metastring:'title="Output"',children:'[ Counter ] signal emitted: { &"name": "Counter", &"count": 1 }\n[ Counter ] signal emitted: { &"name": "Counter", &"count": 2 }\n[ Counter ] signal emitted: { &"name": "Counter", &"count": 3 }\n\n[ Counter ] signal emitted: { &"name": "Counter", &"count": 1 }\n'})}),"\n",(0,i.jsxs)(r.p,{children:["For implementation details, see ",(0,i.jsx)(r.a,{href:"https://github.com/tkmfujise/ReDScribe/blob/main/demo/addons/redscribe/mrblib/actor.rb",children:"addons/redscribe/mrblib/actor.rb"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["By using ",(0,i.jsx)(r.strong,{children:"actor.rb"}),", you can build interactive systems as mini-games with race mechanics."]}),"\n",(0,i.jsxs)(r.p,{children:["See: ",(0,i.jsx)(r.a,{href:"https://github.com/tkmfujise/ReDScribe/blob/main/doc/examples/3_actor.md",children:"https://github.com/tkmfujise/ReDScribe/blob/main/doc/examples/3_actor.md"})]}),"\n",(0,i.jsx)(r.h2,{id:"resource",children:"resource"}),"\n",(0,i.jsx)(r.p,{children:"This DSL allows you to define resources."}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Use ",(0,i.jsx)(r.code,{children:"resource :key"})," to define the schema for a single resource."]}),"\n",(0,i.jsxs)(r.li,{children:["Use ",(0,i.jsx)(r.code,{children:"resources :key => :keys"})," to define the schema for multiple resources."]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"require 'addons/redscribe/mrblib/resource'\n\nresource :character do\n  resources :skill => :skills\nend\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"To emit a signal, invoke a method with the same name as the schema, passing a block to describe its contents."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"character 'Alice' do\n  job :magician\n\n  skill 'Fire' do\n    damage 2\n  end\n\n  skill 'Care' do\n    restore 3\n  end\nend\n"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-txt",metastring:'title="Output"',children:'[ character ] signal emitted: {\n  &"job": &"magician",\n  &"name": "Alice",\n  &"skills":\n    { &"damage": 2, &"name": "Fire" },\n    { &"restore": 3, &"name": "Care" }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(r.p,{children:["For implementation details, see ",(0,i.jsx)(r.a,{href:"https://github.com/tkmfujise/ReDScribe/blob/main/demo/addons/redscribe/mrblib/resource.rb",children:"addons/redscribe/mrblib/resource.rb"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["By using ",(0,i.jsx)(r.strong,{children:"resource.rb"}),", you can generate Godot resource files directly from your DSL definitions."]}),"\n",(0,i.jsxs)(r.p,{children:["See: ",(0,i.jsx)(r.a,{href:"https://github.com/tkmfujise/ReDScribe/blob/main/doc/examples/2_resource_generator.md",children:"https://github.com/tkmfujise/ReDScribe/blob/main/doc/examples/2_resource_generator.md"})]}),"\n",(0,i.jsx)(r.h2,{id:"others",children:"Others"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"addons/redscribe/mrblib"})," folder also includes additional components such as:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"math"}),"\n",(0,i.jsx)(r.li,{children:"shell"}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["For more details, see:\n",(0,i.jsx)(r.a,{href:"https://github.com/tkmfujise/ReDScribe/blob/main/doc/addons/mrblib.md",children:"https://github.com/tkmfujise/ReDScribe/blob/main/doc/addons/mrblib.md"})]}),"\n",(0,i.jsxs)(r.p,{children:["In the next chapter, we'll use ",(0,i.jsx)(r.strong,{children:"resource.rb"})," to build a program that generates Godot resource files."]})]})}function h(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);